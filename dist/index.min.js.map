{"version":3,"file":"index.min.js","sources":["../src/helpers.js","../src/index.js"],"sourcesContent":["export const sanitizedFilename = fileName => {\n  let newFileName = fileName\n  // remove old file endings\n  newFileName = newFileName.replace(/\\.[^/.]{2,4}$/, '')\n  // according to the rokka team only point and slash are not allowed\n  newFileName = newFileName.replace(/[.\\\\/]/g, '-')\n  return newFileName\n}\n\nexport const generalProps = {\n  alt: { type: String, default: null },\n  title: { type: String, default: null },\n  org: { type: String, default: '' },\n  stack: { type: String, default: 'dynamic' },\n  hash: { type: String, default: '' },\n  format: { type: String, default: 'jpg' },\n  filename: { type: String, default: 'image' },\n  srcAttribute: { type: String, default: 'src' },\n  srcAdditionalAttribute: { type: String, default: null },\n  srcsetAttribute: { type: String, default: 'srcset' },\n  operations: {\n    type: Array,\n    default: () => {\n      return []\n    }\n  },\n  options: {\n    type: Object,\n    default: () => {\n      return {}\n    }\n  },\n  variables: {\n    type: Object,\n    default: () => {\n      return {}\n    }\n  }\n}\n\n// from an object to the rokka notation\n// input\n//       resize: {\n//         width: 300,\n//       },\n//       crop: {\n//         height: 200\n//       }\n// output\n//       resize-width-300--crop-height-200\nexport const flattenObject = obj => {\n  const toReturn = []\n\n  Object.keys(obj).forEach(key => {\n    const val = obj[key]\n\n    // for objects we should do a recursion\n    if (typeof val === 'object') {\n      const flatObject = flattenObject(val)\n      for (const x in flatObject) {\n        if (!flatObject.hasOwnProperty(x)) continue\n\n        // are we itteration over a array or object\n        if (Array.isArray(flatObject)) {\n          toReturn.push(`${key}-${flatObject[x]}`)\n        } else {\n          toReturn.push(`${key}-${x}-${flatObject[x]}`)\n        }\n      }\n    } else {\n      toReturn.push(`${key}-${val}`)\n    }\n  })\n  return toReturn\n}\n\nexport const buildRokkaUrl = props => {\n  const {\n    org,\n    stack,\n    // operations,\n    variables,\n    options,\n    filename,\n    format,\n    hash\n  } = props\n\n  // let operationsStr = null\n  // if (operations && operations.length) {\n  //   operationsStr = operations\n  //     .reduce(operation => flattenObject(operation), [])\n  //     .join('--')\n  // }\n\n  const variablesStr = flattenObject({ v: variables }).join('--')\n  const optionsStr = flattenObject({ options }).join('--')\n\n  const url = [\n    `${org}.rokka.io/${stack}`,\n    // operationsStr,\n    variablesStr,\n    optionsStr,\n    hash,\n    `${sanitizedFilename(filename)}.${format}`\n  ].join('/').replace(/\\/{2,}/g, '/')\n\n  return 'https://' + url\n}\n\n// https://stackoverflow.com/questions/27936772/how-to-deep-merge-instead-of-shallow-merge\n\n/**\n * Simple object check.\n * @param item\n * @returns {boolean}\n */\nexport const isObject = item => {\n  return item && typeof item === 'object' && !Array.isArray(item)\n}\n\n/**\n * Deep merge two objects.\n * @param target\n * @param ...sources\n */\nexport const mergeDeep = (target, ...sources) => {\n  if (!sources.length) return target\n  const source = sources.shift()\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, { [key]: {} })\n        mergeDeep(target[key], source[key])\n      } else {\n        Object.assign(target, { [key]: source[key] })\n      }\n    }\n  }\n\n  return mergeDeep(target, ...sources)\n}\n\n// https://stackoverflow.com/questions/40712399/deep-merging-nested-arrays\nexport const mergeArraysDeep = (arr1, arr2) => {\n  const unique = arr1.concat(arr2).reduce((accumulator, item) => {\n    if (accumulator[item.name]) {\n      accumulator[item.name] = mergeDeep(accumulator[item.name], item)\n    } else {\n      accumulator[item.name] = item\n    }\n\n    return accumulator\n  }, {})\n\n  return Object.keys(unique).map(function(key) {\n    return unique[key]\n  })\n}\n\nexport const srcset = (item) => {\n  const currentPostfix = item.postfix\n  const currentOperations = item.operations\n  const currentOptions = item.options\n  const currentVariables = item.variables\n\n  const parrentPostfix = item.$parent.$props.postfix\n  const parrentOperations = item.$parent.$props.operations\n  const parrentOptions = item.$parent.$props.options\n  const parrentVariables = item.$parent.$props.variables\n\n  let maxItems = Math.max(\n    Array.isArray(currentPostfix) ? currentPostfix.length : 0,\n    Array.isArray(currentOperations) ? currentOperations.length : 0,\n    Array.isArray(currentOptions) ? currentOptions.length : 0,\n    Array.isArray(currentVariables) ? currentVariables.length : 0\n  )\n\n  if (item.$parent.$options._componentTag === 'rokka-picture') {\n    maxItems = Math.max(\n      maxItems,\n\n      Array.isArray(parrentPostfix) ? parrentPostfix.length : 0,\n      Array.isArray(parrentOperations) ? parrentOperations.length : 0,\n      Array.isArray(parrentOptions) ? parrentOptions.length : 0,\n      Array.isArray(parrentVariables) ? parrentVariables.length : 0\n    )\n  }\n  const srcset = []\n\n  for (let i = 0; i < maxItems; i++) {\n    // get the current props\n    // depending if passed a obj or an array\n    const postfix = Array.isArray(currentPostfix)\n      ? currentPostfix[i]\n      : currentPostfix\n    let operations =\n      Array.isArray(currentOperations) &&\n      Array.isArray(currentOperations[0])\n        ? currentOperations[i]\n        : currentOperations\n    let options = Array.isArray(currentOptions)\n      ? currentOptions[i]\n      : currentOptions\n    let variables = Array.isArray(currentVariables)\n      ? currentVariables[i]\n      : currentVariables\n\n    if (item.$parent.$options._componentTag === 'rokka-picture') {\n      // get the parent props\n      // depending if passed a obj or an array\n      const pOperations =\n        Array.isArray(parrentOperations) &&\n        Array.isArray(parrentOperations[0])\n          ? parrentOperations[i]\n          : parrentOperations\n      const pOptions = Array.isArray(parrentOptions)\n        ? parrentOptions[i]\n        : parrentOptions\n      const pVariables = Array.isArray(parrentVariables)\n        ? parrentVariables[i]\n        : parrentVariables\n\n      operations = mergeArraysDeep(pOperations, operations)\n      variables = mergeDeep(pVariables, variables)\n      options = mergeDeep(pOptions, options)\n    }\n\n    if (options instanceof  Array && options.length === 0) {\n      options = {}\n    }\n\n    let url = buildRokkaUrl({\n      ...item.$parent.$props,\n      ...item.$options.propsData,\n      operations,\n      variables,\n      options\n    })\n\n    url = encodeURI(url)  + (postfix ? ' ' + postfix : '')\n\n    srcset.push(url)\n  }\n  return srcset.join(', ')\n}\n","import RokkaImageImg from \"./Img.vue\";\nimport RokkaImagePicture from \"./Picture.vue\";\nimport RokkaImageSource from \"./Source.vue\"\nimport {buildRokkaUrl} from \"./helpers\"\n\nexport {\n  RokkaImageImg,\n  RokkaImagePicture,\n  RokkaImageSource,\n  buildRokkaUrl\n}\n\nexport default {\n  install(Vue, options) {\n    // Let's register our component globally\n    // https://vuejs.org/v2/guide/components-registration.html\n    Vue.component(\"rokka-image-img\", RokkaImageImg);\n    Vue.component(\"rokka-image-picture\", RokkaImagePicture);\n    Vue.component(\"rokka-image-source\", RokkaImageSource);\n\n  }\n};"],"names":["sanitizedFilename","fileName","newFileName","replace","generalProps","alt","type","String","title","org","stack","hash","format","filename","srcAttribute","srcAdditionalAttribute","srcsetAttribute","operations","Array","options","Object","variables","flattenObject","obj","toReturn","keys","forEach","key","val","_typeof","flatObject","x","hasOwnProperty","isArray","push","buildRokkaUrl","props","variablesStr","v","join","optionsStr","isObject","item","mergeDeep","target","sources","length","source","shift","assign","mergeArraysDeep","arr1","arr2","unique","concat","reduce","accumulator","name","map","srcset","currentPostfix","postfix","currentOperations","currentOptions","currentVariables","parrentPostfix","$parent","$props","parrentOperations","parrentOptions","parrentVariables","maxItems","Math","max","$options","_componentTag","i","pOperations","pOptions","pVariables","url","propsData","encodeURI","install","Vue","component","RokkaImageImg","RokkaImagePicture","RokkaImageSource"],"mappings":"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"}